@using Planify.Models
<div class="col-auto input-group align-items-center">

    <InputSelect class="form-control form-select" @bind-Value="ArticuloId">
        <option value="0" selected disabled> Seleccione un Articulo: </option>
        @foreach (var articulo in ArticulosList)
        {
            <option value="@articulo.ArticuloId"> @articulo.Nombre -- @articulo.Precio.ToString("N2")
            </option>
        }
    </InputSelect>

    <label class="col-form-label input-group-text">Cantidad</label>
    <InputNumber class="form-control" @bind-Value="Cantidad"></InputNumber>

    <button type="button" class="btn btn-outline-success bi bi-plus" @onclick="TriggerSelection">Agregar</button>
</div>

@if (!string.IsNullOrWhiteSpace(MensajeError))
{
    <div class="alert alert-danger" role="alert">
        @MensajeError
    </div>
}

@code
{
    [Parameter]
    public List<Articulos> ArticulosList { get; set; } = [];
    [Parameter]
    public EventCallback<(Articulos articulos , int cantidad)> ArticuloSeleccionado { get; set; }
    [Parameter]
    public int ArticuloId { get; set; }
    [Parameter]
    public int Cantidad { get; set; }

    public string MensajeError { get; set; }

    public async Task TriggerSelection()
    {
        MensajeError = string.Empty;
    
        if (ArticuloId > 0 && Cantidad > 0)
        {
            var articuloSeleccionado = ArticulosList.FirstOrDefault(a => a.ArticuloId == ArticuloId);
            
            if (articuloSeleccionado != null)
            {
                await ArticuloSeleccionado.InvokeAsync((articuloSeleccionado, Cantidad));
                // Reset values after successful selection
                ArticuloId = 0;
                Cantidad = 0;
            }
            else
            {
                MensajeError = "No se encontró el artículo seleccionado.";
            }
        }
        else
        {
            MensajeError = "Debe seleccionar un artículo y especificar una cantidad.";
        }
    }
}